/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.academy.form;

import br.com.academy.configuration.Configurations;
import br.com.academy.configuration.WebsocketUrls;
import br.com.academy.dto.Content;
import br.com.academy.helpers.GenericWebsocket;
import br.com.academy.model.Chat;
import br.com.academy.model.ChatMessage;
import br.com.academy.model.User;
import br.com.academy.repository.implementation.ChatMessageRepository;
import com.google.gson.Gson;
import java.awt.event.KeyEvent;
import java.net.URISyntaxException;
import java.text.MessageFormat;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author ozzy
 */
public class FormChat extends javax.swing.JFrame {

    private final Chat chat;
    private final User loggedUser;
    private GenericWebsocket genericWebsocket;

    public FormChat(Chat chat, User loggedUser) {
        initComponents();
        this.chat = chat;
        this.loggedUser = loggedUser;
        this.openWsConnection();
        this.loadOldMessages();
    }

    private void loadOldMessages() {
        List<ChatMessage> messages = ChatMessageRepository.getInstance().list(this.chat.getId());
        messages.forEach(m -> {
            edtChat.append("Usuário: " + m.getUsername());
            edtChat.append("\n");
            edtChat.append(m.getMessage());
            edtChat.append("\n\n");
        });
    }

    private void openWsConnection() {
        String fullUrl = MessageFormat.format("{0}{1}?chat={2}",
                Configurations.WEBSOCKER_SERVER,
                WebsocketUrls.CONVERSATION,
                this.chat.getId()
        );
        try {
            genericWebsocket = new GenericWebsocket(fullUrl);
            genericWebsocket.setOnTextReceivedAction((message) -> {
                Gson gson = new Gson();
                Content content = gson.fromJson(message, Content.class);
                edtChat.append("Usuário: " + content.getUsername());
                edtChat.append("\n");
                edtChat.append(content.getMessage());
                edtChat.append("\n\n");
            });
            genericWebsocket.connect();
        } catch (URISyntaxException ex) {
            JOptionPane.showMessageDialog(this, "Não foi possível conectar com o WS");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        edtChat = new javax.swing.JTextArea();
        edtMessage = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        edtChat.setColumns(20);
        edtChat.setRows(5);
        jScrollPane1.setViewportView(edtChat);

        edtMessage.setText("Digite sua mensagem aqui...");
        edtMessage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtMessageFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edtMessageFocusLost(evt);
            }
        });
        edtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtMessageKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .addComponent(edtMessage))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void edtMessageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtMessageFocusGained
        this.edtMessage.setText("");
    }//GEN-LAST:event_edtMessageFocusGained

    private void edtMessageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtMessageFocusLost
        this.edtMessage.setText("Digite sua mensagem aqui...");
    }//GEN-LAST:event_edtMessageFocusLost

    private void edtMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtMessageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            Content content = new Content();
            content.setUsername(this.loggedUser.getUsername());
            content.setMessage(this.edtMessage.getText());

            Gson gson = new Gson();

            genericWebsocket.send(gson.toJson(content));

            this.edtMessage.setText("");
        }
    }//GEN-LAST:event_edtMessageKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        genericWebsocket.close();
    }//GEN-LAST:event_formWindowClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea edtChat;
    private javax.swing.JTextField edtMessage;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
